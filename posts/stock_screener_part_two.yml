
outputFormat: "astro-tech-blog"
genImage: true
imageArgs:
  prompt: "Pile of gold coins floating in the ocean"
frontMatter:
  tags: ["python", "jsx", "react"]
  title: "How I implemented a stock screener in python Part II"
  description: "A stock screener is a tool that helps you find stocks that meet your criteria. In this post I will show you how I implemented a stock screener in python."
  pubDate: Fri, 18 April 2024
  layout: '"@/templates/BasePost.astro"'
  imgSrc : "/imgs/2023/test.png"
outputFile: "stonk_screener_part_II.md"

references: ["https://github.com/FriendlyUser/stock_screener/tree/master", "https://friendlyuser.github.io/posts/stonks/ta/stonk_screener_part_I"]
programmingLanguage: "python"
sections:
  - type: "raw"
    src: "The previous post focused on how to extract ticker symbols using Python, with a code example provided to illustrate the process. The code example demonstrated how to use the Pandas library to read data from a CSV file and apply filters to the data to extract relevant ticker symbols."

  - type: "raw"
    src: "This post covers the logic used in my screeners. The logic is written in Python and is used to filter out stocks that do not meet the criteria of the screener. The logic is stored in a JSON file and is used by the Python code to filter out stocks that do not meet the criteria of the screener."

  - type: "url"
    src: "https://raw.githubusercontent.com/FriendlyUser/stock_screener/master/cfg/high_low_tech.json"
    language: "js"

  - type: "url"
    src: "https://raw.githubusercontent.com/FriendlyUser/stock_screener/master/stock_screener/high_low/logic.py"
    language: "python"

  - type: "url"
    src: "https://raw.githubusercontent.com/FriendlyUser/stock_screener/master/stock_screener/penny_stocks/logic.py"
    language: "python"